#include "./utils/const.comp"

vec2 sample_circle(in float t) {
  float phi = t * TWO_PI;
  return vec2(cos(phi), sin(phi));
}
vec2 sample_incircle(in vec2 t) {
  return sample_circle(t.x) * sqrt(t.y);
}
vec3 sample_cosine_weighted_sphere(in vec2 t) {
  float phi = TWO_PI * t.y;
  float sin_theta = sqrt(1. - t.x);
  return vec3(sin_theta * cos(phi), sin_theta * sin(phi), sqrt(t.x)); 
}
vec3 sample_sphere(in vec2 t) {
  vec2 uv = vec2(t.x * 2. - 1., t.y);
  float sinTheta = sqrt(1 - uv.x * uv.x); 
  float phi = TWO_PI * uv.y; 
  float x = sinTheta * cos(phi); 
  float z = sinTheta * sin(phi); 
  return vec3(x, uv.x, z); 
}
vec3 sample_insphere(in vec3 t) {
  return sample_sphere(t.xy) * cbrt(t.z); 
}
vec2 sample_insquare(in vec2 t) {
  return (2. * t - 1.); 
}